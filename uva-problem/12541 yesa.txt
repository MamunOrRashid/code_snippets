#include<iostream>
#include<stdio.h>
#include<algorithm>
using namespace std;
struct persn
{
    char name[20];
    int day,month,year;
};

 bool cmp(persn a,persn b)
{
    if(a.year == b. year )
    {
        if(a.month == b. month )
            return a.day<b.day;
        else return a.month < b.month;
    }

     return a.year<b.year;
}

 int main()
{
    persn pr[111];
    int n,i,j,k,l,d,m,y;
    cin>>n;
    for(i=0;i<n;i++)
    {
        cin>>pr[i].name>>pr[i].day>>pr[i].month>>pr[i].year;
    }
    sort(pr,pr+n,cmp);

     cout<<pr[n-1].name<<endl<<pr[0].name<<endl;
    return 0;

 }




 * Author: Quickgrid ( Asif Ahmed )
 * Site: https://quickgrid.wordpress.com
 * Problem: UVA 12541 ( Birth dates  )
 */
  
#include<stdio.h>
 
struct person{
    char name[16];
    unsigned int date, month, year;
};
 
int main(){
    register unsigned int n, i = 0;
 
    scanf("%u", &n);
 
    struct person p[n], maxp, minp;
 
    for(; i<n; ++i){
        scanf("%s%u%u%u", &p[i].name, &p[i].date, &p[i].month, &p[i].year);
    }
 
    maxp = p[0];    /*younger person*/
    minp = p[0];    /*older person*/
 
    for(i=0; i<n; ++i){
        if(p[i].year > maxp.year)
            maxp = p[i];
 
        else if(p[i].year < minp.year)
            minp = p[i];
 
        else{
            if(p[i].month > maxp.month && p[i].year >= maxp.year)
                maxp = p[i];
 
            else if(p[i].month < minp.month && p[i].year <= minp.year)
                minp = p[i];
 
            else{
                if(p[i].date > maxp.date && p[i].month >= maxp.month && p[i].year >= maxp.year)
                    maxp = p[i];
                else if(p[i].date < minp.date && p[i].month <= minp.month && p[i].year <= minp.year)
                    minp = p[i];
            }
        }
 
    }
 
    printf("%s\n%s\n", maxp.name, minp.name);
 
    return 0;
}
